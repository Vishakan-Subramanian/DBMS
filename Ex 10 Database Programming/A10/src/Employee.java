/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author svish
 */

import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.*;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

public class Employee extends javax.swing.JFrame {

    Connection con;
    Statement stmt;
    CallableStatement call_stmt;
    PreparedStatement ps;
    ResultSet rs;
    
    /**
     * Creates new form Employee
     */
    public Employee(){
        initComponents();
        this.setSize(1250, 950);
        this.setResizable(false);
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2 - this.getSize().width/2, dim.height/2 - this.getSize().height/2);
       
        try{
            Class.forName("oracle.jdbc.OracleDriver");
            
            try{
                con = DriverManager.getConnection("jdbc:oracle:thin:@DESKTOP-U03B9C9:1521:XE", "vish", "1234");
                JOptionPane.showMessageDialog(this, "Sucessfully connected to database!");
            }
            
            catch(SQLException ex){
                Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
        catch(ClassNotFoundException e){
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
        
    }
    
    private void clearTextFields(){
        idText.setText("");
        nameText.setText("");
        dobDate.setCalendar(null);
        genderGroup.clearSelection();
        jobBox.setSelectedIndex(0);
        basicText.setText("");
        hraText.setText("");
        daText.setText("");
        pfText.setText("");
        mcText.setText("");
        netText.setText("");
        deducText.setText("");
        grossText.setText("");
    }
    
    private void disableButtons(){
        addBtn.setEnabled(false);
        updateBtn.setEnabled(false);
        searchBtn.setEnabled(false);
        deleteBtn.setEnabled(false);
        nextBtn.setEnabled(false);
        prevBtn.setEnabled(false);
    }
    
    private void setTextFieldState(boolean flag){
        idText.setEnabled(flag);
        nameText.setEnabled(flag);
        dobDate.setEnabled(flag);
        maleRadio.setEnabled(flag);
        femaleRadio.setEnabled(flag);
        jobBox.setEnabled(flag);
        basicText.setEnabled(flag);
    }
    
    private void editableState(boolean flag){
        idText.setEditable(flag);
        nameText.setEditable(flag);
        jobBox.setEditable(false);
        basicText.setEditable(flag);
    }
    
    private void showRecord(ResultSet rs){
        try {
            idText.setText(rs.getString(1));
            nameText.setText(rs.getString(2));
            dobDate.setDate(stringToDate(rs.getString(3).substring(0,10)));
            
            if(rs.getString(4).equalsIgnoreCase("m")){
                maleRadio.setSelected(true);
            }
            else{
                femaleRadio.setSelected(true);
            }
            
            jobBox.setSelectedItem(rs.getString(5));
            basicText.setText(rs.getString(6));
            daText.setText(rs.getString(7));
            hraText.setText(rs.getString(8));
            pfText.setText(rs.getString(9));
            mcText.setText(rs.getString(10));
            grossText.setText(rs.getString(11));
            deducText.setText(rs.getString(12));
            netText.setText(rs.getString(13));
        } 
        catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
               
    }
    
    private java.util.Date stringToDate(String sdate){
        //converting a String to a Date object for the JDateChooser Swing Control
        java.util.Date date = null;
        try {
            date = new SimpleDateFormat("yyyy-MM-dd").parse(sdate);
        } catch (ParseException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
        return date;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        basicText = new javax.swing.JTextField();
        idText = new javax.swing.JTextField();
        deleteBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        daText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        hraText = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        pfText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        mcText = new javax.swing.JTextField();
        grossText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        femaleRadio = new javax.swing.JRadioButton();
        maleRadio = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        deducText = new javax.swing.JTextField();
        netText = new javax.swing.JTextField();
        dobDate = new com.toedter.calendar.JDateChooser();
        jobBox = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        prevBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        firstBtn = new javax.swing.JButton();
        lastBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Database Programming");
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("EMPLOYEE DATABASE");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(430, 20, 420, 60);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("Name");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 250, 270, 40);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("Designation");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 460, 270, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 0));
        jLabel4.setText("DOB");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 320, 270, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setText("Basic Pay");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 530, 270, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 0));
        jLabel6.setText("ID");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(30, 180, 270, 40);

        nameText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });
        nameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameTextKeyReleased(evt);
            }
        });
        getContentPane().add(nameText);
        nameText.setBounds(310, 250, 310, 40);

        basicText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(basicText);
        basicText.setBounds(310, 530, 310, 40);

        idText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        idText.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                idTextInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        idText.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                idTextPropertyChange(evt);
            }
        });
        idText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idTextKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idTextKeyTyped(evt);
            }
        });
        getContentPane().add(idText);
        idText.setBounds(310, 180, 310, 40);

        deleteBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        deleteBtn.setText("DELETE");
        deleteBtn.setEnabled(false);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        getContentPane().add(deleteBtn);
        deleteBtn.setBounds(530, 790, 130, 40);

        clearBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        clearBtn.setText("CLEAR");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        getContentPane().add(clearBtn);
        clearBtn.setBounds(850, 790, 130, 40);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText("Sex");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(30, 390, 270, 40);

        searchBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        searchBtn.setText("SEARCH");
        searchBtn.setEnabled(false);
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        getContentPane().add(searchBtn);
        searchBtn.setBounds(690, 790, 130, 40);

        updateBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        updateBtn.setText("UPDATE");
        updateBtn.setEnabled(false);
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        getContentPane().add(updateBtn);
        updateBtn.setBounds(370, 790, 130, 40);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 0));
        jLabel8.setText("DA");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(710, 180, 170, 40);

        daText.setEditable(false);
        daText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        daText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daTextActionPerformed(evt);
            }
        });
        getContentPane().add(daText);
        daText.setBounds(890, 180, 310, 40);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 0));
        jLabel11.setText("HRA");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(710, 250, 170, 40);

        hraText.setEditable(false);
        hraText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(hraText);
        hraText.setBounds(890, 250, 310, 40);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 0));
        jLabel12.setText("PF");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(710, 320, 170, 40);

        pfText.setEditable(false);
        pfText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(pfText);
        pfText.setBounds(890, 320, 310, 40);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 0));
        jLabel13.setText("MC");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(710, 390, 170, 40);

        mcText.setEditable(false);
        mcText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(mcText);
        mcText.setBounds(890, 390, 310, 40);

        grossText.setEditable(false);
        grossText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(grossText);
        grossText.setBounds(890, 550, 310, 40);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 0));
        jLabel14.setText("Gross Pay");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(700, 550, 180, 40);

        genderGroup.add(femaleRadio);
        femaleRadio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        femaleRadio.setForeground(new java.awt.Color(255, 255, 0));
        femaleRadio.setText("Female");
        getContentPane().add(femaleRadio);
        femaleRadio.setBounds(490, 390, 130, 40);

        genderGroup.add(maleRadio);
        maleRadio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        maleRadio.setForeground(new java.awt.Color(255, 255, 0));
        maleRadio.setText("Male");
        getContentPane().add(maleRadio);
        maleRadio.setBounds(310, 390, 130, 40);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 0));
        jLabel16.setText("Total Deductions");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(700, 620, 180, 40);

        deducText.setEditable(false);
        deducText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(deducText);
        deducText.setBounds(890, 620, 310, 40);

        netText.setEditable(false);
        netText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(netText);
        netText.setBounds(890, 690, 310, 40);

        dobDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(dobDate);
        dobDate.setBounds(310, 320, 310, 40);

        jobBox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jobBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Intern", "Trainee", "Programmer", "Analyst", "Chef", "Systems Architect", "Database Engineer", "Manager", "HR", "Admin", "CFO", "CEO" }));
        getContentPane().add(jobBox);
        jobBox.setBounds(310, 460, 310, 40);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 0));
        jLabel17.setText("Net Pay");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(700, 690, 180, 40);

        prevBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        prevBtn.setText("PREVIOUS RECORD");
        prevBtn.setEnabled(false);
        prevBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevBtnActionPerformed(evt);
            }
        });
        getContentPane().add(prevBtn);
        prevBtn.setBounds(370, 850, 210, 40);

        nextBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        nextBtn.setText("NEXT RECORD");
        nextBtn.setEnabled(false);
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });
        getContentPane().add(nextBtn);
        nextBtn.setBounds(610, 850, 210, 40);

        addBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        addBtn.setText("ADD");
        addBtn.setEnabled(false);
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addBtn);
        addBtn.setBounds(210, 790, 130, 40);

        firstBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        firstBtn.setText("FIRST RECORD");
        firstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstBtnActionPerformed(evt);
            }
        });
        getContentPane().add(firstBtn);
        firstBtn.setBounds(130, 850, 210, 40);

        lastBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lastBtn.setText("LAST RECORD");
        lastBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastBtnActionPerformed(evt);
            }
        });
        getContentPane().add(lastBtn);
        lastBtn.setBounds(850, 850, 210, 40);

        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        getContentPane().add(jLabel10);
        jLabel10.setBounds(670, 150, 550, 310);

        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        getContentPane().add(jLabel15);
        jLabel15.setBounds(670, 520, 550, 240);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 102, 102));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Final Pay-Slip");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(670, 490, 550, 30);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 102, 102));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Employee Information");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(10, 120, 640, 30);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 102, 102));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Pay Split-Up");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(670, 120, 550, 30);

        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        getContentPane().add(jLabel9);
        jLabel9.setBounds(10, 150, 640, 460);

        jLabel18.setBackground(new java.awt.Color(153, 0, 153));
        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 0));
        jLabel18.setOpaque(true);
        getContentPane().add(jLabel18);
        jLabel18.setBounds(-30, -20, 1330, 1050);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        clearTextFields();
        disableButtons();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        int emp_id = Integer.parseInt(idText.getText());
        
        try{
            String sel_stmt = "SELECT * FROM emp_payroll WHERE eid = " + emp_id;
            //to allow for next and previous record scrolling, Statement obj. should be of this form
            stmt  = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery(sel_stmt);
            
            if(rs.next()){ 
                showRecord(rs);
                JOptionPane.showMessageDialog(this, "Record Found!");
            }
            else{
                JOptionPane.showMessageDialog(this, "No Records Found!");
                clearTextFields();
            }
        }
        catch(SQLException ex){
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int emp_id = Integer.parseInt(idText.getText());
        
        try{
            String del_stmt = "DELETE FROM emp_payroll WHERE eid = ?";
            ps  = con.prepareStatement(del_stmt);
            ps.setString(1, Integer.toString(emp_id));
            ps.execute();
            JOptionPane.showMessageDialog(this, "Record Deleted!");
            
        }
        catch(SQLException ex){
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
        
        clearTextFields();
        disableButtons();
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        try {
            String updateQuery = "UPDATE emp_payroll SET ename = ?, dob = ?, sex = ?, designation = ?, basic = ? WHERE eid = ?";
            ps = con.prepareStatement(updateQuery);
            ps.setString(1, nameText.getText());
            
            DateFormat df = new SimpleDateFormat("dd-MMM-yyyy");
            String dob = df.format(dobDate.getDate());
            ps.setString(2, dob);
            
            if(maleRadio.isSelected() == true){
                ps.setString(3, "M");
            }
            else{
                ps.setString(3, "F");
            }
            
            ps.setString(4, jobBox.getSelectedItem().toString());
            ps.setString(5, basicText.getText());
            ps.setString(6, idText.getText());
            ps.execute();
            JOptionPane.showMessageDialog(this, "Record Updated!");
            
            String call_pay_calc = "CALL pay_calc(?,?)";
            call_stmt = con.prepareCall(call_pay_calc);
            call_stmt.setString(1, idText.getText());
            call_stmt.setString(2, basicText.getText());
            call_stmt.execute();
            
        } catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
        
        clearTextFields();
        disableButtons();
    }//GEN-LAST:event_updateBtnActionPerformed

    private void idTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTextKeyTyped
        
        
    }//GEN-LAST:event_idTextKeyTyped

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        
    }//GEN-LAST:event_nameTextActionPerformed

    private void idTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTextKeyPressed
        
    }//GEN-LAST:event_idTextKeyPressed

    private void nameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextKeyPressed

    private void nameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextKeyReleased
        String temp = nameText.getText().trim();
        
        if(temp.isEmpty() == false && updateBtn.isEnabled() == true){
            addBtn.setEnabled(true);
        }
        else{
            addBtn.setEnabled(false);
        }
    }//GEN-LAST:event_nameTextKeyReleased

    private void idTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTextKeyReleased
        String temp = idText.getText().trim();
        if(temp.isEmpty() == false){
            updateBtn.setEnabled(true);
            deleteBtn.setEnabled(true);
            searchBtn.setEnabled(true);
        }
        else{
            updateBtn.setEnabled(false);
            deleteBtn.setEnabled(false);
            searchBtn.setEnabled(false);
        }
    }//GEN-LAST:event_idTextKeyReleased

    private void idTextPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_idTextPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextPropertyChange

    private void idTextInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_idTextInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextInputMethodTextChanged

    private void prevBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevBtnActionPerformed
        try {
            
            rs.previous();
            
            if(rs.isBeforeFirst()){
                JOptionPane.showMessageDialog(this, "Current Record is the First Record!");
                rs.next();
                prevBtn.setEnabled(false);
            }
            
            showRecord(rs);
            //JOptionPane.showMessageDialog(this, "Record Found!");
            nextBtn.setEnabled(true);
        } 
        catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
        
    }//GEN-LAST:event_prevBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        try {
            if(rs.next()){
                showRecord(rs);
                //JOptionPane.showMessageDialog(this, "Record Found!");
                prevBtn.setEnabled(true);
            }
            else{
                JOptionPane.showMessageDialog(this, "Current Record is the Last Record!");
                rs.previous();
                nextBtn.setEnabled(false);
            }
        } 
        catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_nextBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        try{
            String insert = "INSERT INTO Emp_Payroll(eid, ename, dob, sex, designation, basic) VALUES (?,?,?,?,?,?)";
            ps = con.prepareStatement(insert);
            ps.setString(1, idText.getText());
            ps.setString(2, nameText.getText());
            
            DateFormat df = new SimpleDateFormat("dd-MMM-yyyy");
            String dob = df.format(dobDate.getDate());
            ps.setString(3, dob);
            
            if(maleRadio.isSelected() == true){
                ps.setString(4, "M");
            }
            else{
                ps.setString(4, "F");
            }
            
            ps.setString(5, jobBox.getSelectedItem().toString());
            ps.setString(6, basicText.getText());
            ps.execute();
            
            String call_pay_calc = "CALL pay_calc(?,?)";
            call_stmt = con.prepareCall(call_pay_calc);
            call_stmt.setString(1, idText.getText());
            call_stmt.setString(2, basicText.getText());
            call_stmt.execute();
            
            JOptionPane.showMessageDialog(this, "Insertion Successful!");
        }
        catch(HeadlessException | NumberFormatException | SQLException e){
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(this, e);
        }
        
        clearTextFields();
    }//GEN-LAST:event_addBtnActionPerformed

    private void firstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstBtnActionPerformed
        try {
            String sel_stmt = "SELECT * FROM emp_payroll ORDER BY eid ASC";
            //to allow for next and previous record scrolling, Statement obj. should be of this form
            stmt  = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery(sel_stmt);
            rs.first();
            showRecord(rs);
            prevBtn.setEnabled(false);
            nextBtn.setEnabled(true);
        } 
        catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
            
    }//GEN-LAST:event_firstBtnActionPerformed

    private void lastBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastBtnActionPerformed
        try {
            String sel_stmt = "SELECT * FROM emp_payroll ORDER BY eid ASC";
            //to allow for next and previous record scrolling, Statement obj. should be of this form
            stmt  = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery(sel_stmt);
            rs.last();
            showRecord(rs);
            nextBtn.setEnabled(false);
            prevBtn.setEnabled(true);
        } 
        catch (SQLException ex) {
            Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_lastBtnActionPerformed

    private void daTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_daTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Employee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField basicText;
    private javax.swing.JButton clearBtn;
    private javax.swing.JTextField daText;
    private javax.swing.JTextField deducText;
    private javax.swing.JButton deleteBtn;
    private com.toedter.calendar.JDateChooser dobDate;
    private javax.swing.JRadioButton femaleRadio;
    private javax.swing.JButton firstBtn;
    private javax.swing.ButtonGroup genderGroup;
    private javax.swing.JTextField grossText;
    private javax.swing.JTextField hraText;
    private javax.swing.JTextField idText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> jobBox;
    private javax.swing.JButton lastBtn;
    private javax.swing.JRadioButton maleRadio;
    private javax.swing.JTextField mcText;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField netText;
    private javax.swing.JButton nextBtn;
    private javax.swing.JTextField pfText;
    private javax.swing.JButton prevBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
